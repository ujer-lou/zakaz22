# Generated by Django 5.1.4 on 2024-12-22 17:16

import costumadmin.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('level', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to='books/')),
            ],
        ),
        migrations.CreateModel(
            name='CambridgeTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_name', models.CharField(help_text='Kitob nomi', max_length=100)),
                ('test_number', models.IntegerField(help_text='Test raqami')),
                ('reading_test_number', models.IntegerField(help_text='Reading test raqami')),
                ('listening_test_number', models.IntegerField(help_text='Listening test raqami')),
                ('listening_available', models.BooleanField(default=True, help_text='Listening test mavjudligi')),
                ('reading_available', models.BooleanField(default=True, help_text='Reading test mavjudligi')),
            ],
        ),
        migrations.CreateModel(
            name='FillInTheBlanksQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_name', models.CharField(help_text='A descriptive name for the question', max_length=255)),
                ('question_text', models.TextField(help_text="Savol matni, masalan: 'Excavations of rock shelters inside {{qnumber}} {{blank}} near the village of Kelo revealed:'")),
            ],
        ),
        migrations.CreateModel(
            name='TestSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='WritingTask1',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('bar_chart', 'Bar Chart'), ('line_graph', 'Line Graph'), ('table', 'Table'), ('pie_chart', 'Pie Chart'), ('diagram', 'Diagram'), ('map', 'Map')], max_length=50, verbose_name='Type')),
                ('type1', models.CharField(choices=[('1', '1'), ('2', '2')], default='bar_chart', max_length=50, verbose_name='typeee')),
                ('question', models.TextField(verbose_name='Question')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='writing_task_photos1/', verbose_name='Photo')),
            ],
        ),
        migrations.CreateModel(
            name='BlankAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blank_identifier', models.CharField(help_text="Blank identifikatori, masalan: 'blank1'", max_length=10)),
                ('correct_answer', models.CharField(help_text="To'g'ri javob", max_length=255)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='costumadmin.fillintheblanksquestion')),
            ],
        ),
        migrations.CreateModel(
            name='ReadingSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reading_passage', models.CharField(help_text='Bu yerda READING PASSAGE NUMBER boladu', max_length=255)),
                ('section_name', models.CharField(help_text="Passage nomi, masalan 'How tennis rackets have changed'", max_length=255)),
                ('section_text', models.TextField(blank=True, help_text='Bu yerda passage matni yoziladi (majburiy emas)', null=True)),
                ('section_type', models.CharField(choices=[('A', 'Type A'), ('B', 'Type B'), ('C', 'Type C'), ('D', 'Type D'), ('E', 'Type E'), ('F', 'Type F'), ('G', 'Type G'), ('1', 'Type 1'), ('2', 'Type 2'), ('3', 'Type 3'), ('4', 'Type 4'), ('5', 'Type 5'), ('6', 'Type 6'), ('7', 'Type 7'), ('8', 'Type 8'), ('9', 'Type 9'), ('10', 'Type 10'), ('11', 'Type 11'), ('12', 'Type 12'), ('13', 'Type 13'), ('14', 'Type 14'), ('15', 'Type 15')], help_text="Passage turini belgilovchi harf, har bir tur ma'lum bir test formatini ifodalaydi", max_length=10)),
                ('cambridge_test', models.ForeignKey(help_text="Bu passage tegishli bo'lgan Cambridge testi", on_delete=django.db.models.deletion.CASCADE, related_name='reading_sections', to='costumadmin.cambridgetest')),
            ],
        ),
        migrations.AddField(
            model_name='fillintheblanksquestion',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fill_in_the_blanks_questions', to='costumadmin.readingsection'),
        ),
        migrations.CreateModel(
            name='SectionText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_type', models.CharField(choices=[('A', 'Type A'), ('B', 'Type B'), ('C', 'Type C'), ('D', 'Type D'), ('E', 'Type E'), ('F', 'Type F'), ('G', 'Type G'), ('1', 'Type 1'), ('2', 'Type 2'), ('3', 'Type 3'), ('4', 'Type 4'), ('5', 'Type 5'), ('6', 'Type 6'), ('7', 'Type 7'), ('8', 'Type 8'), ('9', 'Type 9'), ('10', 'Type 10'), ('11', 'Type 11'), ('12', 'Type 12'), ('13', 'Type 13'), ('14', 'Type 14'), ('15', 'Type 15')], max_length=10)),
                ('text', models.TextField()),
                ('reading_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='texts', to='costumadmin.readingsection')),
            ],
        ),
        migrations.CreateModel(
            name='TFNGQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.IntegerField(help_text='Savol raqami')),
                ('question_text', models.TextField(help_text='Savol matni')),
                ('correct_answer', models.CharField(choices=[('True', 'True'), ('False', 'False'), ('Not Given', 'Not Given')], help_text="To'g'ri javob", max_length=10)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tfng_questions', to='costumadmin.readingsection')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_num', models.SmallIntegerField(default=1)),
                ('unit_name', models.CharField(max_length=255)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='costumadmin.book')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='Email manzili')),
                ('rank', models.PositiveSmallIntegerField(default=0)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('user', 'User')], default='user', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='Groups this user belongs to.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissions for this user.', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', costumadmin.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correct', models.PositiveSmallIntegerField()),
                ('quantity', models.SmallIntegerField()),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('vocab', 'Lug‘at'), ('test', 'Test')], max_length=50)),
                ('test_section', models.ManyToManyField(related_name='results', to='costumadmin.testsection')),
                ('unit', models.ManyToManyField(related_name='results', to='costumadmin.unit')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='costumadmin.user')),
            ],
        ),
        migrations.CreateModel(
            name='Vocab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('en', models.CharField(max_length=255)),
                ('uz', models.CharField(max_length=255)),
                ('audio_file', models.FileField(blank=True, null=True, upload_to='vocab/audio/')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vocabs', to='costumadmin.unit')),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('matn', 'Matn'), ('audio', 'Audio'), ('aralash', 'Aralash')], default='matn', max_length=10)),
                ('question', models.CharField(max_length=255)),
                ('a', models.CharField(max_length=255)),
                ('b', models.CharField(max_length=255)),
                ('c', models.CharField(max_length=255)),
                ('d', models.CharField(max_length=255)),
                ('right', models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')], max_length=1)),
                ('audio', models.FileField(blank=True, null=True, upload_to='audios/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costumadmin.book')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costumadmin.unit')),
                ('vocab', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='costumadmin.vocab')),
            ],
        ),
    ]
